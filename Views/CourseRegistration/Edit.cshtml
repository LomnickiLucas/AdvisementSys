@model AdvisementSys.Models.Request.EditCourseRegistrationModel

@{
    ViewBag.Title = "Update Part-Time and/or Additional Course Registration Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script src="@Url.Content("~/Scripts/jquery-ui-1.8.11.min.js")" type="text/javascript"></script>
<link href="@Url.Content("~/Content/themes/base/jquery.ui.all.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/Scripts/jquery.validate.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model._part_timeAnd_orAdditionalCourseRegistrationForm.registrationid)
    @Html.HiddenFor(model => model._part_timeAnd_orAdditionalCourseRegistrationForm.issueid)

    <h2>Edit Part-Time and/or/ Additional Course Registration Form</h2>  
    
    <table style="width: 800px;">
        <tr>
            <td colspan="4">
                <h3>Student Information</h3>
            </td>
        </tr>
        <tr>
            <td>
                Name:
            </td>
            <td>
                @Html.DisplayFor(model => model._student.fname)
                @Html.DisplayFor(model => model._student.lname)
            </td>
            <td>
                Student #:
            </td>
            <td>
                @Html.DisplayFor(model => model._student.studentid)
            </td>
        </tr>
        <tr>
            <td>
                Program:
            </td>
            <td>
                @Html.DisplayFor(model => model._student.programcode) - @Html.DisplayFor(model => model._student.program.programname)
            </td>
            <td>
                International Student:
            </td>
            <td>
                @Html.DisplayFor(model => model._student.international)
            </td>
        </tr>
        <tr>
            <td>
                *Term:
            </td>
            <td>
                @Html.DropDownListFor(model => model._part_timeAnd_orAdditionalCourseRegistrationForm.term, new SelectList(new[] {"1", "2", "3", "4", "5", "6", "7", "8", "9", "10"}, Model._part_timeAnd_orAdditionalCourseRegistrationForm.term), new { id = "term", @class = "required", @style="width:150px;" })
                    @Html.ValidationMessageFor(model => model._part_timeAnd_orAdditionalCourseRegistrationForm.term)
            </td>
            <td>
                *Date:
            </td>
            <td>
                @Html.TextBoxFor(model => model._part_timeAnd_orAdditionalCourseRegistrationForm.date, new { id = "datepicker", @class = "required", @Value = Model._part_timeAnd_orAdditionalCourseRegistrationForm.date.ToString("dd/MM/yyyy") })
                    @Html.ValidationMessageFor(model => model._part_timeAnd_orAdditionalCourseRegistrationForm.date)
            </td>
        </tr>
        <tr>
            <td>
                *Status:
            </td>
            <td>
               @Html.DropDownListFor(model => model._part_timeAnd_orAdditionalCourseRegistrationForm.status, new SelectList(new[] { "In Progress", "On Hold", "Complete" }, Model._part_timeAnd_orAdditionalCourseRegistrationForm.status), new { @class = "required", @style = "width:150px;" })
                    @Html.ValidationMessageFor(model => model._part_timeAnd_orAdditionalCourseRegistrationForm.status)
            </td>
        </tr>
        <tr>
            <td colspan="4">
                <h3>Course Registration Information</h3>
            </td>
        </tr>
        <tr>
            <td>
                *CLS #:
            </td>
            <td align="right">
                 @Html.TextBoxFor(model => model._part_timeAnd_orAdditionalCourseRegistrationForm.clsnum, new { id = "clsnum", @class = "required clsnumdigit" })
                    @Html.ValidationMessageFor(model => model._part_timeAnd_orAdditionalCourseRegistrationForm.clsnum)
            </td>
            <td>
                *Course Code:
            </td>
            <td align="right">
                 @Html.TextBoxFor(model => model._part_timeAnd_orAdditionalCourseRegistrationForm.coursecode, new { id = "coursecode", @class = "required coursecoderegex" })
                    @Html.ValidationMessageFor(model => model._part_timeAnd_orAdditionalCourseRegistrationForm.coursecode)
            </td>
        </tr>
        <tr>
            <td>
                *Credit Value:
            </td>
            <td align="right">
                @Html.TextBoxFor(model => model._part_timeAnd_orAdditionalCourseRegistrationForm.creditvalue, new { id = "creditvalue", @class = "required" })
                    @Html.ValidationMessageFor(model => model._part_timeAnd_orAdditionalCourseRegistrationForm.creditvalue)
            </td>
            <td>
                Course Cost:
            </td>
            <td style="width: 20%;" align="right">
               @Html.TextBoxFor(model => model._part_timeAnd_orAdditionalCourseRegistrationForm.coursecharges, new { id = "courseCharges", @class = "required costRegex" })
                    @Html.ValidationMessageFor(model => model._part_timeAnd_orAdditionalCourseRegistrationForm.coursecharges)
            </td>
        </tr>
        <tr>
            <td>
                Program Materials/Kit Charges (if applicable):
            </td>
            <td style="width: 20%;" align="right">
                @Html.TextBoxFor(model => model._part_timeAnd_orAdditionalCourseRegistrationForm.matfees, new { id = "matfees", @class = "costRegex" })
            </td>
            <td>
                Mobile Computing Charges (if applicable):
            </td>
            <td style="width: 20%;" align="right">
                 @Html.TextBoxFor(model => model._part_timeAnd_orAdditionalCourseRegistrationForm.compcharges, new { id = "compcharges", @class = "costRegex" })
            </td>
        </tr>
        <tr>
            <td>
                Total($):
            </td>
            <td>
                $ &nbsp <input type="text" id="totalText" readonly="readonly" style="border:none; width:100px;"/>
            </td>
        </tr>
    </table>
   
       <br />
        <div>
         <input type="submit" value="Update" class="Button" style="position: relative; left:10px;"/>
         
         </div>
    <p>Fields marked with an * are mandatory.</p>
}

<div>
    @Html.ActionLink("Back to Part Time And/or Additional Course Registration Form", "Details/" + Model._part_timeAnd_orAdditionalCourseRegistrationForm.registrationid)
</div>

<script type="text/javascript">

    $(document).ready(function () {
        $("#datepicker").datepicker({ dateFormat: "dd/mm/yy" });
        
    });

    $.validator.addMethod("clsnumdigit", function (value) {
        return value.match(/^\d{5}$/);
    }, 'Please enter a 5 digit number');

    $.validator.addMethod("costRegex", function (value) {
        return value.match(/^.{0,8}$/);
    }, 'Please enter a valid value');

    $.validator.addMethod("coursecoderegex", function (value) {
        return value.match(/^[A-Z]{4}\d{5}$/);
    }, 'Please enter a valid course code');

    $('#courseRegistrationForm').validate({
    });

    (function ($) {
        $.fn.currencyFormat = function () {
            this.each(function (i) {
                $(this).change(function (e) {
                    if (isNaN(parseFloat(this.value))) return;
                    this.value = parseFloat(this.value).toFixed(2);
                });
            });
            return this; //for chaining
        }
    })(jQuery);

    $(function () {
        var textBox1 = $('input:text[id$=courseCharges]').keyup(foo).currencyFormat();
        var textBox2 = $('input:text[id$=matfees]').keyup(foo).currencyFormat();
        var textBox3 = $('input:text[id$=compcharges]').keyup(foo).currencyFormat();

        function foo() {
            var value1 = textBox1.val();
            var value2 = textBox2.val();
            var value3 = textBox3.val();
            var sum = add(value1, value2, value3);
            $('input:text[id$=totalText]').val(sum);
        }

        function add() {
            var sum = 0;
            for (var i = 0, j = arguments.length; i < j; i++) {
                if (IsNumeric(arguments[i])) {
                    sum += parseFloat(arguments[i]);
                }
            }
            return sum.toFixed(2);
        }
        function IsNumeric(input) {
            return (input - 0) == input && input.length > 0;
        }
    });
</script>
