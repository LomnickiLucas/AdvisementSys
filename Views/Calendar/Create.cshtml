@model AdvisementSys.Models.Request.CreateAppointmentRequestModel
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="@Url.Content("~/Scripts/jquery-ui-1.8.11.min.js")" type="text/javascript"></script>
<link href="@Url.Content("~/Content/themes/base/jquery.ui.all.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<link href="@Url.Content("~/Scripts/TimePicker/jquery.ui.timepicker.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/Scripts/TimePicker/jquery.ui.timepicker.js")" type="text/javascript"></script>
<div class="contentDiv">
    @using (Html.BeginForm("Create", "Calendar", FormMethod.Post, new { id = "calendarForm", name = "calendarForm" }))
    {
        @Html.ValidationSummary(true) 
  
        <h2>
            New Appointment</h2>
    
        <table style="width: 800px;">
            <tr>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model._appointment.subject, "Subject:")
                    </div>
                </td>
                <td colspan="3">
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model._appointment.subject, new { @class = "required" })
                        @Html.ValidationMessageFor(model => model._appointment.subject)
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model._appointment.cname, "Campus:")
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                        @Html.DropDownListFor(model => model._appointment.cname, new SelectList(Model._campus, Model._campus))
                        @Html.ValidationMessageFor(model => model._appointment.cname)
                    </div>
                </td>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model._appointment.appointmenttype, "Appointment Type:")
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                        @Html.DropDownListFor(model => model._appointment.appointmenttype, new SelectList(Model.appoingmentType, Model.appoingmentType))
                        @Html.ValidationMessageFor(model => model._appointment.appointmenttype)
                    </div>
                </td>
            </tr>

            <tr>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model._appointment.starttime, "Start Date:")
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model._appointment.starttime, new { @id = "datepicker", @class = "required", @Value = Model._appointment.starttime.ToShortDateString() })
                        @Html.ValidationMessageFor(model => model._appointment.starttime)
                    </div>
                </td>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.startTime, "Start Time:")
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.startTime, new { @id = "timepicker1", @class="required" })
                        @Html.ValidationMessageFor(model => model.startTime)
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model._appointment.endtime, "End Date:")
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model._appointment.endtime, new { @id = "datepicker1", @class="required", @Value = Model._appointment.endtime.ToShortDateString() })
                        @Html.ValidationMessageFor(model => model._appointment.endtime)
                    </div>
                </td>                
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.endTime, "End Time:")
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.endTime, new { @id = "timepicker2", @class="required" })
                        @Html.ValidationMessageFor(model => model.endTime)
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model._appointment.allday, "Create an appointment for the whole day:")
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                        @Html.CheckBoxFor(model => model._appointment.allday, new { @id = "allDay" })
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model._appointment.employeeid, "Chairman:")
                    </div>
                </td>
                <td colspan="2">
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model._appointment.employeeid, new { @id = "txtEmpID", @class="required" })
                        @Html.ValidationMessageFor(model => model._appointment.employeeid)
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Attendees, "Attendees:")
                    </div>
                </td>
                <td colspan="3">
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.Attendees, new { @id = "txtID", @class = "required" })
                        @Html.ValidationMessageFor(model => model.Attendees)
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.emailAll, "Send all Attendees an email notification:")
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                        @Html.CheckBoxFor(model => model.emailAll)
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model._appointment.description, "Description:")
                    </div>
                </td>
                <td colspan="3">
                    <div class="editor-field">
                        @Html.TextAreaFor(model => model._appointment.description)
                        @Html.ValidationMessageFor(model => model._appointment.description)
                    </div>
                </td>
            </tr>
            <tr>
                <td colspan="4">
                </td>
            </tr>
            <tr>
                <td colspan="4">
                </td>
            </tr>
        </table>
        <br />
        <div>
            <input type="submit" value="Create" class="Button" style="position: relative; left: 10px;" />
        </div>
    }
</div>
<div>
    @Html.ActionLink("Back to Calendar", "Index")
</div>
<script type="text/javascript">
    $("#datepicker").datepicker({ dateFormat: "dd/mm/yy" });
    $("#datepicker1").datepicker({ dateFormat: "dd/mm/yy" });

    var model = @Html.Raw(Json.Encode(Model.AttendeesAutoComplete));

    function split( val ) {
            return val.split( /,\s*/ );
        }
        function extractLast( term ) {
            return split( term ).pop();
        }

    $("#txtID").bind( "keydown", function( event ) {
                if ( event.keyCode === $.ui.keyCode.TAB &&
                        $( this ).data( "autocomplete" ).menu.active ) {
                    event.preventDefault();
                }
            }) .autocomplete({
                minLength: 0,
                source: function( request, response ) {
                    // delegate back to autocomplete, but extract the last term
                    response( $.ui.autocomplete.filter(
                        model, extractLast( request.term ) ) );
                },
                focus: function( event, ui ) {
                    $( "#txtID" ).val($("#txtID").val() + ui.item.Label);
                    return false;
                },
                select: function( event, ui ) {
                    $( "#txtID" ).val($("#txtID").val() + ui.item.Label);

                    var terms = split( this.value );
                    // remove the current input
                    terms.pop();
                    // add the selected item
                    terms.push( ui.item.Label );
                    // add placeholder to get the comma-and-space at the end
                    terms.push( "" );
                    this.value = terms.join( ", " );
                    return false;
                }
            }).data( "autocomplete" )._renderItem = function( ul, item ) {
            return $( "<li>" )
                .data( "item.autocomplete", item )
                .append( "<a>" + item.Label + "<br>" + item.Email + "<br>" + item.Role + "</a>" )
                .appendTo( ul );
        };;

    var model1 = @Html.Raw(Json.Encode(Model.EmployeeID));

    $("#txtEmpID").autocomplete({
            minLength: 0,
            source: model1,
            focus: function( event, ui ) {
                $( "#txtEmpID" ).val( ui.item.Label );
                return false;
            },
            select: function( event, ui ) {
                $( "#txtEmpID" ).val( ui.item.Label );
                return false;
            }
        })
        .data( "autocomplete" )._renderItem = function( ul, item ) {
            return $( "<li>" )
                .data( "item.autocomplete", item )
                .append( "<a>" + item.Label + "<br>" + item.Email + "<br>" + item.Role + "</a>" )
                .appendTo( ul );
        };

    $('#timepicker1').timepicker({
    showPeriod: true,
    showLeadingZero: true
});

$('#timepicker2').timepicker({
    showPeriod: true,
    showLeadingZero: true
});

        $.validator.addMethod("stud", function (value) {
            return value.match(/^\d{9}$/);
        }, 'Please enter a valid Student ID');
         $("#studentForm").validate();
</script>
