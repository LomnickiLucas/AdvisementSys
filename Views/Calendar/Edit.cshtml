@model AdvisementSys.Models.Request.EditCalendarModel
@{
    ViewBag.Title = "Update Appointment";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="@Url.Content("~/Content/themes/base/jquery.ui.all.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/Scripts/jquery-ui-1.8.11.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.textarea-expander.js")" type="text/javascript"></script>
<link href="@Url.Content("~/Content/css/note.form.css")" rel="stylesheet" type="text/css" />
<link href="@Url.Content("~/Scripts/TimePicker/jquery.ui.timepicker.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/Scripts/TimePicker/jquery.ui.timepicker.js")" type="text/javascript"></script>
<div class="contentDiv">
    <h2>
        Update Appointment</h2>
        
        @using (Html.BeginForm("Edit", "Calendar", FormMethod.Post, new { name = "calendarForm" }))
        {
            <table style="width: 800px;">
                <tr>
                    <td>
                        <div class="display-label">
                            Description:</div>
                    </td>
                    <td colspan="3">
                        <div class="display-field">
                            @Html.TextBoxFor(model => model.appointment.subject, new { @class = "required", @style = "width: 100%;" })
                        </div>
                    </td>
                    <tr>
                    </tr>
                    <td>
                        <div class="display-label">
                            Location:</div>
                    </td>
                    <td>
                        <div class="display-field">
                            @Html.DropDownListFor(model => model.appointment.cname, new SelectList(Model._campus, Model._campus), new { @class = "field" })
                        </div>
                    </td>
                    <td>
                        <div class="display-label">
                            Appointment Type:</div>
                    </td>
                    <td>
                        <div class="display-field">
                            @Html.DropDownListFor(model => model.appointment.appointmenttype, new SelectList(Model.appoingmentType, Model.appoingmentType), new { @class = "DDL" })
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <div class="display-label">
                            Apointment Date:</div>
                    </td>
                    <td>
                        <div class="display-field">
                            @Html.TextBoxFor(model => model.appointment.starttime, new { @id = "datepicker", @class = "field required", @Value = Model.appointment.starttime.ToShortDateString(), @onchange = "datepickerOnChange()" })
                        </div>
                    </td>
                    <td>
                        <div class="display-label">
                            All Day Appointment:</div>
                    </td>
                    <td>
                        <div class="display-field">
                            @Html.CheckBoxFor(model => model.appointment.allday, new { @id = "allDay", @onclick = "formatDates()" })
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <div class="display-label">
                            Start Time:</div>
                    </td>
                    <td>
                        <div class="display-field">
                            @Html.TextBoxFor(model => model.startTime, new { @id = "timepicker1", @class = " field required" })
                        </div>
                    </td>
                    <td>
                        <div class="display-label">
                            End Time:</div>
                    </td>
                    <td>
                        <div class="display-field">
                            @Html.TextBoxFor(model => model.endTime, new { @id = "timepicker2", @class = " field required" })
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <strong>Appointment Participants:</strong>
                    </td>
                </tr>
                <tr>
                    <td>
                        <strong>
                            <div class="display-label" style="position: relative; left: 10px;">
                                Chair:</div>
                        </strong>
                    </td>
                </tr>
                </table>
                <table class="noteThread" style="position: relative; left: 20px;">
                    <tr>
                        <td>
                            <strong>@Html.DisplayFor(model => model.chair.fname) @Html.DisplayFor(model => model.chair.lname)</strong>
                        </td>
                        <td style="text-align: right;">
                            <strong>@Html.DisplayFor(model => model.chair.faculty)</strong>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @Html.DisplayFor(model => model.chair.role)
                        </td>
                        <td style="text-align: right;">
                            <a href="mailto:@Model.chair.email?subject=@Model.appointment.subject Appointment on @Model.appointment.starttime.ToShortDateString() at @Model.appointment.starttime.ToShortTimeString()&body=@Request.Url.ToString()">
                                @Html.DisplayFor(model => model.chair.email)
                            </a>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <a href="#" class="change_Chair">Change Chair</a>
                        </td>
                        <td style="text-align: right;">
                            @Html.DisplayFor(model => model.chair.phonenum)
                        </td>
                    </tr>
                </table>
                <br />
                if (Model.Attendees.Count() > 0)
                {
                    <tr>
                        <td>
                            <div class="display-label" style="position: relative; left: 10px;">
                                <strong>Attendees:</strong> ( <a href="#" class="add_attendees">Add Attendees</a>
                                )
                            </div>
                        </td>
                    </tr>
                    foreach (var item in Model.Attendees)
                    {
                    <tr>
                        @if (item.Student != null)
                        {
                            <table class="noteThread" style="position: relative; left: 20px;">
                                <tr>
                                    <td>
                                        <strong>@Html.DisplayFor(modelItem => item.Student.fname) @Html.DisplayFor(modelItem => item.Student.lname)</strong>
                                        ( <a href="#" class="remove_attendee" value="@item.Student.studentid">Remove Attendee</a> )
                                    </td>
                                    <td style="text-align: right;">
                                        <strong>@Html.DisplayFor(momodelItemdel => item.StudFaculty)</strong>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        Student
                                    </td>
                                    <td style="text-align: right;">
                                        <a href="mailto:@item.Student.email?subject=@Model.appointment.subject Appointment on @Model.appointment.starttime.ToShortDateString() at @Model.appointment.starttime.ToShortTimeString()">
                                            @Html.DisplayFor(modelItem => item.Student.email)
                                        </a>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        @if (item.Attendees.confirmed == true)
                                        {
                                            <span><strong style="color: #0AB90A;">Confirmed</strong> </span>     
                                        }
                                        else if (item.Attendees.confirmed == false)
                                        {
                                            <strong style="color: #CD0000;">Declined</strong>
                                        }
                                    </td>
                                    <td style="text-align: right;">
                                        @Html.DisplayFor(modelItem => item.Student.phonenum)
                                    </td>
                                </tr>
                                @if (item.Attendees.confirmed == false)
                                {
                                    <tr>
                                        <td colspan="2">
                                            <div style="background-color: #F5F5F5;">
                                                @Html.TextAreaFor(modelItem => item.Attendees.reason, new { @style = "width:800px; height:80px;overflow: hidden; border: none;background:none", @readonly = "readonly" })
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </table>
                            <br />
                        }
                        @if (item.Student == null)
                        {
                            <table class="noteThread" style="position: relative; left: 20px;">
                                <tr>
                                    <td>
                                        <strong>@Html.DisplayFor(modelItem => item.Emplployee.fname) @Html.DisplayFor(modelItem => item.Emplployee.lname)</strong>
                                        ( <a href="#" class="remove_attendee" value="@item.Emplployee.employeeid">Remove Attendee</a> )
                                    </td>
                                    <td style="text-align: right;">
                                        <strong>@Html.DisplayFor(modelItem => item.Emplployee.faculty)</strong>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Emplployee.role)
                                    </td>
                                    <td style="text-align: right;">
                                        <a href="mailto:@item.Emplployee.email?subject=@Model.appointment.subject Appointment on @Model.appointment.starttime.ToShortDateString() at @Model.appointment.starttime.ToShortTimeString()&body=@Request.Url.ToString()">
                                            @Html.DisplayFor(modelItem => item.Emplployee.email)
                                        </a>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        @if (item.Attendees.confirmed == true)
                                        {
                                            <strong style="color: #0AB90A;">Confirmed</strong>           
                                        }
                                        else if (item.Attendees.confirmed == false)
                                        {
                                            <strong style="color: #CD0000;">Declined</strong>
                                        }
                                        else if (item.Attendees.confirmed == null)
                                        {
                                            <strong>Unconfirmed</strong><br />
                                        }
                                    </td>
                                    <td style="text-align: right;">
                                        @Html.DisplayFor(modelItem => item.Emplployee.phonenum)
                                    </td>
                                </tr>
                                @if (item.Attendees.confirmed == false)
                                {
                                    <tr>
                                        <td colspan="2">
                                            <div style="background-color: #F5F5F5;">
                                                @Html.TextAreaFor(modelItem => item.Attendees.reason, new { @style = "width:800px; height:100px;overflow: hidden; border: none;background:none", @readonly = "readonly" })
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </table>
                            <br />
                        }
                    </tr>
                    }
                }
                <table>
                    <tr>
                        <td>
                            Notes:
                        </td>
                    </tr>
                    <tr>
                        <td colspan="3" style="background-color: #F5F5F5;">
                            @Html.TextAreaFor(model => model.appointment.description, new { @style = "width:820px; height:100px;overflow: hidden; border: none;background:none" })
                        </td>
                    </tr>
                </table>
                <br />
        <div>
            <input type="submit" value="Edit" class="Button" style="position: relative; left: 10px;" onclick="enableTime()"/>
        </div>
            @Html.HiddenFor(model => model.appointment.appointmentid, new { @id = "appointmentid" })
            @Html.HiddenFor(model => model.appointment.repeating, new { @id = "hdnRepID" })
            @Html.HiddenFor(model => model.appointment.employeeid, new { @id = "empID" })
            @Html.HiddenFor(model => model.appointment.endtime, new { @id = "endTime" })
        }
</div>
<p>
    @Html.ActionLink("Back to Calendar", "Index")
</p>
<div id="dialog-confirmAppointment" title="Confirm Appointment?">
    <p>
        <span class="ui-icon ui-icon-alert" style="float: left; margin: 0 7px 20px 0;"></span>
        You are about to confirm this Appointmnet, are you sure you want to do this?</p>
</div>
<div id="dialog-confirmAppointmentSeries" title="Confirm Appointment Series?">
    <p>
        <span class="ui-icon ui-icon-alert" style="float: left; margin: 0 7px 20px 0;"></span>
        You are about to confirm this series of Appointmnets, are you sure you want to do this?</p>
</div>
<div id="dialog-confirm" title="Delete Appointment?">
    <p>
        <span class="ui-icon ui-icon-alert" style="float: left; margin: 0 7px 20px 0;"></span>
        This Appointment will be permanently deleted and cannot be recovered. Are you sure
        you want to delete this?</p>
</div>
<div id="dialog-confirm-series" title="Delete Appointment Series?">
    <p>
        <span class="ui-icon ui-icon-alert" style="float: left; margin: 0 7px 20px 0;"></span>
        This Appointment and all the appointments part of this series will be permanently deleted and cannot be recovered. Are you sure
        you want to delete this?</p>
</div>
<div id="dialog-message-error" title="Error">
    <p>
        <span class="ui-icon ui-icon-circle-check" style="float: left; margin: 0 7px 50px 0;">
        </span>An Error has occcured please check to confirm that this appointment exists.
        If you still would like to perform an action on this appointment please try again.
    </p>
</div>
<div id="dialog-message-success" title="Success!">
    <p>
        <span class="ui-icon ui-icon-circle-check" style="float: left; margin: 0 7px 50px 0;">
        </span>You have successfully deleted the appointment!
    </p>
</div>
<div id="dialog-message-success-series" title="Success!">
    <p>
        <span class="ui-icon ui-icon-circle-check" style="float: left; margin: 0 7px 50px 0;">
        </span>You have successfully deleted all the appointments part of this series!
    </p>
</div>
<div id="dialog-remove_attendee" title="Remove Attendee">
    <p>
        <span class="ui-icon ui-icon-alert" style="float: left; margin: 0 7px 20px 0;"></span>
        You are about to remove an Attendee from this Appointmnet, are you sure you want to do this?</p>
</div>
<div id="dialog-message-success-remove_attendee" title="Success!">
    <p>
        <span class="ui-icon ui-icon-circle-check" style="float: left; margin: 0 7px 50px 0;">
        </span>You have successfully removed an Attendee from this appointment!
    </p>
</div>
<input type="hidden" id="hdnAttendID" />
<script>
    function formatDates()
    {
      if(document.getElementById('allDay').checked)
      {
         document.getElementById('timepicker1').value = '12:00 AM';
         document.getElementById('timepicker2').value = '12:00 AM';
         document.getElementById('timepicker1').disabled=true;
         document.getElementById('timepicker2').disabled=true;
       }
      else
      {
        document.getElementById('timepicker1').disabled=false;
        document.getElementById('timepicker2').disabled=false;
      }
    }

    function enableTime()
    {
        document.getElementById('timepicker1').disabled=false;
        document.getElementById('timepicker2').disabled=false;
    }

    $(function () {
    formatDates();

    $("#datepicker").datepicker({ dateFormat: "dd/mm/yy" });

    $('#timepicker1').timepicker({
    showPeriod: true,
    showLeadingZero: true
});

$('#timepicker2').timepicker({
    showPeriod: true,
    showLeadingZero: true
});

    $("#dialog-message-success").dialog({
                                autoOpen: false,
                                height: 200,
                                width: 450,
                                modal: true,
                                buttons: {
                                    Ok: function() {
                                        location = "@Url.Content("~/Calendar")";
                                    }
                                }
                            });

    $("#dialog-message-success-remove_attendee").dialog({
                                autoOpen: false,
                                height: 200,
                                width: 450,
                                modal: true,
                                buttons: {
                                    Ok: function() {
                                        location = "@Url.Content(Request.Url.AbsoluteUri)";
                                    }
                                }
                            });


    $("#dialog-message-success-series").dialog({
                                autoOpen: false,
                                height: 200,
                                width: 450,
                                modal: true,
                                buttons: {
                                    Ok: function() {
                                        location = "@Url.Content("~/Calendar")";
                                    }
                                }
                            });

    $("#dialog-message-error").dialog({
                                autoOpen: false,
                                height: 200,
                                width: 450,
                                modal: true,
                                buttons: {
                                    Ok: function() {
                                        location = "@Url.Content("~/Calendar")";
                                    }
                                }
                            });

        $("#dialog-confirm").dialog({
            autoOpen: false,
            resizable: false,
            height: 200,
            width: 450,
            modal: true,
            buttons: {
                "Delete this item": function () {
                    $.ajax({
                        url: "/Calendar/Delete/" + document.getElementById("appointmentid").value,
                        type: "POST",
                        data: { },
                        dataType: "json",
                        success: function (data) {
                            $("#dialog-message-success").dialog("open");
                        },
                        complete: function (jqXHR, textStatus) {
                            
                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                            $("#dialog-message-error").dialog("open");
                        }
                    });
                },
                Cancel: function () {
                    $(this).dialog("close");
                }
            }
        });

        $("#dialog-confirm-series").dialog({
            autoOpen: false,
            resizable: false,
            height: 200,
            width: 450,
            modal: true,
            buttons: {
                "Delete this item": function () {
                    $.ajax({
                        url: "/Calendar/DeleteSeries/" + document.getElementById("hdnRepID").value,
                        type: "POST",
                        data: { },
                        dataType: "json",
                        success: function (data) {
                            $("#dialog-message-success-confirm").dialog("open");
                        },
                        complete: function (jqXHR, textStatus) {
                            
                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                            $("#dialog-message-error").dialog("open");
                        }
                    });
                },
                Cancel: function () {
                    $(this).dialog("close");
                }
            }
        });

        $("#dialog-confirmAppointment").dialog({
            autoOpen: false,
            resizable: false,
            height: 200,
            width: 450,
            modal: true,
            buttons: {
                "Confirm this Appointment": function () {
                    $.ajax({
                        url: "/Calendar/Confirm",
                        type: "POST",
                        data: { 
                                ID: document.getElementById("hdnAttendID").value,
                                AppointmentID: document.getElementById("appointmentid").value
                        },
                        dataType: "json",
                        success: function (data) {
                            $("#dialog-message-success-confirm").dialog("open");
                        },
                        complete: function (jqXHR, textStatus) {
                            
                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                            $("#dialog-message-error").dialog("open");
                        }
                    });
                },
                Cancel: function () {
                    $(this).dialog("close");
                }
            }
        });

        $("#dialog-confirmAppointmentSeries").dialog({
            autoOpen: false,
            resizable: false,
            height: 200,
            width: 450,
            modal: true,
            buttons: {
                "Confirm this series of Appointments": function () {
                    $.ajax({
                        url: "/Calendar/ConfirmSeries",
                        type: "POST",
                        data: { 
                                ID: document.getElementById("hdnAttendID").value,
                                AppointmentID: document.getElementById("appointmentid").value,
                                repeatingID: document.getElementById("hdnRepID").value
                         },
                        dataType: "json",
                        success: function (data) {
                            $("#dialog-message-success-confirm-series").dialog("open");
                        },
                        complete: function (jqXHR, textStatus) {
                            
                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                            $("#dialog-message-error").dialog("open");
                        }
                    });
                },
                Cancel: function () {
                    $(this).dialog("close");
                }
            }
        });

        $( "#dialog-remove_attendee" ).dialog({
            autoOpen: false,
            resizable: true,
            height: 200,
            width: 450,
            modal: true,
            buttons: {
                "Remove Attendee": function () {
                    $.ajax({
                        url: "/Calendar/RemoveAttendee",
                        type: "POST",
                        data: { 
                                ID: document.getElementById("hdnAttendID").value,
                                AppointmentID: document.getElementById("appointmentid").value
                         },
                        dataType: "json",
                        success: function (data) {
                            $("#dialog-message-success-remove_attendee").dialog("open");
                        },
                        complete: function (jqXHR, textStatus) {
                            
                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                            $("#dialog-message-error").dialog("open");
                        }
                    });
                },
                Cancel: function () {
                    $(this).dialog("close");
                }
            }
        });

        $(".remove_attendee")
            .click(function () {
                document.getElementById("hdnAttendID").value = $(this).attr("value");
                $("#dialog-remove_attendee").dialog("open");
            });

        $(".confirm")
            .click(function () {
                document.getElementById("hdnAttendID").value = $(this).attr("value");
                $("#dialog-confirmAppointment").dialog("open");
            });

        $(".confirmseries")
            .click(function () {
                document.getElementById("hdnAttendID").value = $(this).attr("value");
                $("#dialog-confirmAppointmentSeries").dialog("open");
            });

        $("#DeleteAppointemnt")
            .click(function () {
                $("#dialog-confirm").dialog("open");
            });

        $("#DeleteAppointemntseries")
            .click(function () {
                $("#dialog-confirm-series").dialog("open");
            });

    });
</script>
