@model AdvisementSys.Models.Request.CreateAppointmentRequestModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



<script src="@Url.Content("~/Scripts/jquery-ui-1.8.11.min.js")" type="text/javascript"></script>
<link href="@Url.Content("~/Content/themes/base/jquery.ui.all.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<link href="@Url.Content("~/Scripts/TimePicker/jquery.ui.timepicker.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/Scripts/TimePicker/jquery.ui.timepicker.js")" type="text/javascript"></script>
<div class="contentDiv">
@using (Html.BeginForm("Edit", "Calendar", FormMethod.Post, new { id = "calendarForm", name = "calendarForm" }))
{
    @Html.ValidationSummary(true)
    <h2>Update Appointment</h2>
    

        @Html.HiddenFor(model => model._appointment.appointmentid)

        <table style="width: 800px;">
            <tr>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model._appointment.starttime, "Start Date:")
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model._appointment.starttime, new { @id = "datepicker", @class = "required", @Value = Model._appointment.starttime.ToShortDateString() })
                        @Html.ValidationMessageFor(model => model._appointment.starttime)
                    </div>
                </td>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model._appointment.endtime, "End Date:")
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model._appointment.endtime, new { @id = "datepicker1", @class = "required", @Value = Model._appointment.endtime.ToShortDateString() })
                        @Html.ValidationMessageFor(model => model._appointment.endtime)
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.startTime, "Start Time:")
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.startTime, new { @id = "timepicker1", @class = "required" })
                        @Html.ValidationMessageFor(model => model.startTime)
                    </div>
                </td>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.endTime, "End Time:")
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.endTime, new { @id = "timepicker2", @class = "required" })
                        @Html.ValidationMessageFor(model => model.endTime)
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model._appointment.studentid, "Student ID:")
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model._appointment.studentid, new { @id = "txtStudID", @class = "required stud" })
                        @Html.ValidationMessageFor(model => model._appointment.studentid)
                    </div>
                </td>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model._appointment.employeeid, "Employee ID:")
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model._appointment.employeeid, new { @id = "txtEmpID", @class = "required" })
                        @Html.ValidationMessageFor(model => model._appointment.employeeid)
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model._appointment.subject, "Subject:")
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model._appointment.subject, new { @class = "required" })
                        @Html.ValidationMessageFor(model => model._appointment.subject)
                    </div>
                </td>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model._appointment.cname, "Campus:")
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                        @Html.DropDownListFor(model => model._appointment.cname, new SelectList(Model._campus, Model._campus))
                        @Html.ValidationMessageFor(model => model._appointment.cname)
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model._appointment.confirmed, "Confirmed:")
                    </div>
                </td>
                <td colspan="3">
                    <div class="editor-field">
                        @Html.EditorFor(model => model._appointment.confirmed)
                        @Html.ValidationMessageFor(model => model._appointment.confirmed)
                    </div>
                </td>
            </tr>
            <tr>
                <td colspan="4">
                    <div class="editor-label">
                        @Html.LabelFor(model => model._appointment.reasonForCancelation, "Reason for Cancellation:")
                    </div>
                </td>
            </tr>
            <tr>
                <td colspan="4">
                    <div class="editor-field">
                        @Html.TextAreaFor(model => model._appointment.reasonForCancelation, new { @style = "width:650px; height:80px; resize:none;" })
                        @Html.ValidationMessageFor(model => model._appointment.reasonForCancelation)
                    </div>
                </td>
            </tr>
        </table>
        <br />
        <div>
            <input type="submit" value="Update" class="Button" style="position: relative; left: 10px;" />
        </div>

}
</div>
<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script type="text/javascript">
    $("#datepicker").datepicker({ dateFormat: "dd/mm/yy" });
    $("#datepicker1").datepicker({ dateFormat: "dd/mm/yy" });

    var model = @Html.Raw(Json.Encode(Model.StudID));

    $("#txtStudID").autocomplete({
        source: model
    });

    var model1 = @Html.Raw(Json.Encode(Model.EmployeeID));

    $("#txtEmpID").autocomplete({
        source: model1
    });

    $('#timepicker1').timepicker({
    showPeriod: true,
    showLeadingZero: true
});

$('#timepicker2').timepicker({
    showPeriod: true,
    showLeadingZero: true
});

   $.validator.addMethod("stud", function (value) {
            return value.match(/^\d{9}$/);
        }, 'Please enter a valid Student ID');
         $("#studentForm").validate();
</script>