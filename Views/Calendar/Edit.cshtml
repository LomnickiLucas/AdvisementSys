@model AdvisementSys.Models.Request.EditCalendarModel
@{
    ViewBag.Title = "Update Appointment";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="@Url.Content("~/Content/themes/base/jquery.ui.all.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/Scripts/jquery-ui-1.8.11.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.textarea-expander.js")" type="text/javascript"></script>
<link href="@Url.Content("~/Content/css/note.form.css")" rel="stylesheet" type="text/css" />
<link href="@Url.Content("~/Scripts/TimePicker/jquery.ui.timepicker.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/Scripts/TimePicker/jquery.ui.timepicker.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.textarea-expander.js")" type="text/javascript"></script>
<div class="contentDiv">
    <h2>
        Update Appointment</h2>
        
        @using (Html.BeginForm("Edit", "Calendar", FormMethod.Post, new { name = "calendarForm" }))
        {
            <table style="width: 800px;">
                <tr>
                    <td>
                        <div class="display-label">
                            *Description:</div>
                    </td>
                    <td colspan="3">
                        <div class="display-field">
                            @Html.TextBoxFor(model => model.appointment.subject, new { @class = "required", @style = "width: 100%;" })
                        </div>
                    </td>
                    <tr>
                    </tr>
                    <td>
                        <div class="display-label">
                            Location:</div>
                    </td>
                    <td>
                        <div class="display-field">
                            @Html.DropDownListFor(model => model.appointment.cname, new SelectList(Model._campus, Model._campus), new { @class = "field" })
                        </div>
                    </td>
                    <td>
                        <div class="display-label">
                            Appointment Type:</div>
                    </td>
                    <td>
                        <div class="display-field">
                            @Html.DropDownListFor(model => model.appointment.appointmenttype, new SelectList(Model.appoingmentType, Model.appoingmentType), new { @class = "DDL" })
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <div class="display-label">
                            Apointment Date:</div>
                    </td>
                    <td>
                        <div class="display-field">
                            @Html.TextBoxFor(model => model.appointment.starttime, new { @id = "datepicker", @class = "field required", @Value = Model.appointment.starttime.ToShortDateString(), @onchange = "datepickerOnChange()" })
                        </div>
                    </td>
                    <td>
                        <div class="display-label">
                            All Day Appointment:</div>
                    </td>
                    <td>
                        <div class="display-field">
                            @Html.CheckBoxFor(model => model.appointment.allday, new { @id = "allDay", @onclick = "formatDates()" })
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <div class="display-label">
                            Start Time:</div>
                    </td>
                    <td>
                        <div class="display-field">
                            @Html.TextBoxFor(model => model.startTime, new { @id = "timepicker1", @class = " field required" })
                        </div>
                    </td>
                    <td>
                        <div class="display-label">
                            End Time:</div>
                    </td>
                    <td>
                        <div class="display-field">
                            @Html.TextBoxFor(model => model.endTime, new { @id = "timepicker2", @class = " field required" })
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <strong>Appointment Participants:</strong>
                    </td>
                </tr>
                <tr>
                    <td>
                        <strong>
                            <div class="display-label" style="position: relative; left: 10px;">
                                Chair:</div>
                        </strong>
                    </td>
                </tr>
                </table>
                <table class="noteThread" style="position: relative; left: 20px;">
                    <tr>
                        <td>
                            <strong>@Html.DisplayFor(model => model.chair.fname) @Html.DisplayFor(model => model.chair.lname)</strong> ( <a href="#" class="change_Chair">Change Chair</a> )
                        </td>
                        <td style="text-align: right;">
                            <strong>@Html.DisplayFor(model => model.chair.faculty)</strong>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @Html.DisplayFor(model => model.chair.role)
                        </td>
                        <td style="text-align: right;">
                            <a href="mailto:@Model.chair.email?subject=@Model.appointment.subject Appointment on @Model.appointment.starttime.ToShortDateString() at @Model.appointment.starttime.ToShortTimeString()&body=@Request.Url.ToString()">
                                @Html.DisplayFor(model => model.chair.email)
                            </a>
                        </td>
                    </tr>
                    <tr>
                        <td>
                        </td>
                        <td style="text-align: right;">
                            @Html.DisplayFor(model => model.chair.phonenum)
                        </td>
                    </tr>
                </table>
                <br />
                    <tr>
                        <td>
                            <div class="display-label" style="position: relative; left: 10px;">
                                <strong>Attendees:</strong> ( <a href="#" class="add_attendees">Add Attendees</a>
                                )
                            </div>
                        </td>
                    </tr>
            if (Model.Attendees.Count() > 0)
            {
                foreach (var item in Model.Attendees)
                {
                    <tr>
                        @if (item.Student != null)
                        {
                            <table class="noteThread" style="position: relative; left: 20px;">
                                <tr>
                                    <td>
                                        <strong>@Html.DisplayFor(modelItem => item.Student.fname) @Html.DisplayFor(modelItem => item.Student.lname)</strong>
                                        ( <a href="#" class="remove_attendee" value="@item.Student.studentid">Remove Attendee</a> )
                                    </td>
                                    <td style="text-align: right;">
                                        <strong>@Html.DisplayFor(momodelItemdel => item.StudFaculty)</strong>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        Student
                                    </td>
                                    <td style="text-align: right;">
                                        <a href="mailto:@item.Student.email?subject=@Model.appointment.subject Appointment on @Model.appointment.starttime.ToShortDateString() at @Model.appointment.starttime.ToShortTimeString()">
                                            @Html.DisplayFor(modelItem => item.Student.email)
                                        </a>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        @if (item.Attendees.confirmed == true)
                                        {
                                            <span><strong style="color: #0AB90A;">Confirmed</strong> </span>     
                                        }
                                        else if (item.Attendees.confirmed == false)
                                        {
                                            <strong style="color: #CD0000;">Declined</strong>
                                        }
                                    </td>
                                    <td style="text-align: right;">
                                        @Html.DisplayFor(modelItem => item.Student.phonenum)
                                    </td>
                                </tr>
                                @if (item.Attendees.confirmed == false)
                                {
                                    <tr>
                                        <td colspan="2">
                                            <div style="background-color: #F5F5F5;">
                                                @Html.TextAreaFor(modelItem => item.Attendees.reason, new { @style = "width:800px; height:80px;overflow: hidden; border: none;background:none", @readonly = "readonly" })
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </table>
                            <br />
                        }
                        @if (item.Student == null)
                        {
                            <table class="noteThread" style="position: relative; left: 20px;">
                                <tr>
                                    <td>
                                        <strong>@Html.DisplayFor(modelItem => item.Emplployee.fname) @Html.DisplayFor(modelItem => item.Emplployee.lname)</strong>
                                        ( <a href="#" class="remove_attendee" value="@item.Emplployee.employeeid">Remove Attendee</a> )
                                    </td>
                                    <td style="text-align: right;">
                                        <strong>@Html.DisplayFor(modelItem => item.Emplployee.faculty)</strong>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Emplployee.role)
                                    </td>
                                    <td style="text-align: right;">
                                        <a href="mailto:@item.Emplployee.email?subject=@Model.appointment.subject Appointment on @Model.appointment.starttime.ToShortDateString() at @Model.appointment.starttime.ToShortTimeString()&body=@Request.Url.ToString()">
                                            @Html.DisplayFor(modelItem => item.Emplployee.email)
                                        </a>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        @if (item.Attendees.confirmed == true)
                                        {
                                            <strong style="color: #0AB90A;">Confirmed</strong>           
                                        }
                                        else if (item.Attendees.confirmed == false)
                                        {
                                            <strong style="color: #CD0000;">Declined</strong>
                                        }
                                        else if (item.Attendees.confirmed == null)
                                        {
                                            <strong>Unconfirmed</strong><br />
                                        }
                                    </td>
                                    <td style="text-align: right;">
                                        @Html.DisplayFor(modelItem => item.Emplployee.phonenum)
                                    </td>
                                </tr>
                                @if (item.Attendees.confirmed == false)
                                {
                                    <tr>
                                        <td colspan="2">
                                            <div style="background-color: #F5F5F5;">
                                                @Html.TextAreaFor(modelItem => item.Attendees.reason, new { @style = "width:800px; height:100px;overflow: hidden; border: none;background:none", @readonly = "readonly" })
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </table>  
                            <br /> 
                        }
                    </tr>
                }
            }
            <br />
                <table>
                    <tr>
                        <td>
                            Notes:
                        </td>
                    </tr>
                    <tr>
                        <td colspan="3" style="background-color: #F5F5F5;">
                            @Html.TextAreaFor(model => model.appointment.description, new { @style = "width:820px; height:100px;overflow: hidden; border: none;background:none" })
                        </td>
                    </tr>
                </table>
                <br />
        <div>
            <input type="submit" value="Edit" class="Button" style="position: relative; left: 10px;" onclick="enableTime()"/>
        </div>
            @Html.HiddenFor(model => model.appointment.appointmentid, new { @id = "appointmentid" })
            @Html.HiddenFor(model => model.appointment.repeating, new { @id = "hdnRepID" })
            @Html.HiddenFor(model => model.appointment.employeeid, new { @id = "empID" })
            @Html.HiddenFor(model => model.appointment.endtime, new { @id = "endTime" })
        }
</div>
<p>
    @Html.ActionLink("Back to Calendar", "Index")
</p>
<div id="dialog-message-error" title="Error">
    <p>
        <span class="ui-icon ui-icon-circle-check" style="float: left; margin: 0 7px 50px 0;">
        </span>An Error has occcured please check to confirm that this appointment exists.
        If you still would like to perform an action on this appointment please try again.
    </p>
</div>
<div id="dialog-remove_attendee" title="Remove Attendee">
    <p>
        <span class="ui-icon ui-icon-alert" style="float: left; margin: 0 7px 20px 0;"></span>
        You are about to remove an Attendee from this Appointmnet, are you sure you want to do this?</p>
</div>
<div id="dialog-message-success-remove_attendee" title="Success!">
    <p>
        <span class="ui-icon ui-icon-circle-check" style="float: left; margin: 0 7px 50px 0;">
        </span>You have successfully removed an Attendee from this appointment!
    </p>
</div>
<div id="dialog-form-change-chair" title="Change Chair">
    <p class="validateTips">Please supply a new chair for this Appointment.</p>
 
    <form>
        <label for="newChair">Employee:</label>
        <textarea type="text" name="newChair" id="newChair" class="text ui-widget-content ui-corner-all required expand" style="width:95%; height:100px; resize:none;"></textarea>
    </form>
</div>
<div id="dialog-message-success-change-chair" title="Success!">
    <p>
        <span class="ui-icon ui-icon-circle-check" style="float: left; margin: 0 7px 50px 0;">
        </span>You have successfully changed the chair of this appointment!
    </p>
</div>
<div id="dialog-form-add-attendees" title="Add New Attendees">
    <p class="validateTips">Please supply all the new attendees for this Appointment.</p>
 
    <form>
        <label for="newAttendees">Attendees:</label>
        <textarea type="text" name="newAttendees" id="newAttendees" class="text ui-widget-content ui-corner-all required expand" style="width:95%; height:100px; resize:none;"></textarea>
    </form>
</div>
<div id="dialog-message-success-new-attendees" title="Success!">
    <p>
        <span class="ui-icon ui-icon-circle-check" style="float: left; margin: 0 7px 50px 0;">
        </span>You have successfully added new attendees to this appointment!
    </p>
</div>
<input type="hidden" id="hdnAttendID" />
<script>
    function formatDates()
    {
      if(document.getElementById('allDay').checked)
      {
         document.getElementById('timepicker1').value = '12:00 AM';
         document.getElementById('timepicker2').value = '12:00 AM';
         document.getElementById('timepicker1').disabled=true;
         document.getElementById('timepicker2').disabled=true;
       }
      else
      {
        document.getElementById('timepicker1').disabled=false;
        document.getElementById('timepicker2').disabled=false;
      }
    }

    function enableTime()
    {
        document.getElementById('timepicker1').disabled=false;
        document.getElementById('timepicker2').disabled=false;
    }

    $(function () {
    formatDates();

    var model = @Html.Raw(Json.Encode(Model.AttendeesAutoComplete));

    function split( val ) {
            return val.split( /,\s*/ );
        }
        function extractLast( term ) {
            return split( term ).pop();
        }

    $("#newAttendees").bind( "keydown", function( event ) {
                if ( event.keyCode === $.ui.keyCode.TAB &&
                        $( this ).data( "autocomplete" ).menu.active ) {
                    event.preventDefault();
                }
            }) .autocomplete({
                minLength: 0,
                source: function( request, response ) {
                    // delegate back to autocomplete, but extract the last term
                    response( $.ui.autocomplete.filter(
                        model, extractLast( request.term ) ) );
                },
                focus: function( event, ui ) {
                    $( "#newAttendees" ).val($("#newAttendees").val() + ui.item.Label);
                    return false;
                },
                select: function( event, ui ) {
                    $( "#newAttendees" ).val($("#newAttendees").val() + ui.item.Label);

                    var terms = split( this.value );
                    // remove the current input
                    terms.pop();
                    // add the selected item
                    terms.push( ui.item.Label );
                    // add placeholder to get the comma-and-space at the end
                    terms.push( "" );
                    this.value = terms.join( ", " );
                    return false;
                }
            }).data( "autocomplete" )._renderItem = function( ul, item ) {
            return $( "<li>" )
                .data( "item.autocomplete", item )
                .append( "<a>" + item.Label + "<br>" + item.Email + "<br>" + item.Role + "</a>" )
                .appendTo( ul );
        };;

    var model1 = @Html.Raw(Json.Encode(Model.EmployeeID));

    $("#newChair").autocomplete({
            minLength: 0,
            source: model1,
            focus: function( event, ui ) {
                $( "#newChair" ).val( ui.item.Label );
                return false;
            },
            select: function( event, ui ) {
                $( "#newChair" ).val( ui.item.Label );
                return false;
            }
        })
        .data( "autocomplete" )._renderItem = function( ul, item ) {
            return $( "<li>" )
                .data( "item.autocomplete", item )
                .append( "<a>" + item.Label + "<br>" + item.Email + "<br>" + item.Role + "</a>" )
                .appendTo( ul );
        };

    $("#datepicker").datepicker({ dateFormat: "dd/mm/yy" });

    $('#timepicker1').timepicker({
    showPeriod: true,
    showLeadingZero: true
});

$('#timepicker2').timepicker({
    showPeriod: true,
    showLeadingZero: true
});

    $("#dialog-message-success-remove_attendee").dialog({
                                autoOpen: false,
                                height: 200,
                                width: 450,
                                modal: true,
                                buttons: {
                                    Ok: function() {
                                        location = "@Url.Content(Request.Url.AbsoluteUri)";
                                    }
                                }
                            });

    $("#dialog-message-success-change-chair").dialog({
                                autoOpen: false,
                                height: 200,
                                width: 450,
                                modal: true,
                                buttons: {
                                    Ok: function() {
                                        location = "@Url.Content("~/Calendar")";
                                    }
                                }
                            });

    $("#dialog-message-success-new-attendees").dialog({
                                autoOpen: false,
                                height: 200,
                                width: 450,
                                modal: true,
                                buttons: {
                                    Ok: function() {
                                        location = "@Url.Content(Request.Url.AbsoluteUri)";
                                    }
                                }
                            });

    $("#dialog-message-error").dialog({
                                autoOpen: false,
                                height: 200,
                                width: 450,
                                modal: true,
                                buttons: {
                                    Ok: function() {
                                        location = "@Url.Content("~/Calendar")";
                                    }
                                }
                            });

        $( "#dialog-form-add-attendees" ).dialog({
            autoOpen: false,
            resizable: true,
            height: 250,
            width: 450,
            modal: true,
            buttons: {
                "Add Attendees": function () {
                    $.ajax({
                        url: "/Calendar/NewAttendees",
                        type: "POST",
                        data: { 
                                AppointmentID: document.getElementById("appointmentid").value,
                                Attendees: document.getElementById("newAttendees").value
                         },
                        dataType: "json",
                        success: function (data) {
                            $("#dialog-message-success-new-attendees").dialog("open");
                        },
                        complete: function (jqXHR, textStatus) {
                            
                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                            $("#dialog-message-error").dialog("open");
                        }
                    });
                },
                Cancel: function () {
                    $(this).dialog("close");
                }
            }
        });

        $( "#dialog-form-change-chair" ).dialog({
            autoOpen: false,
            resizable: true,
            height: 200,
            width: 375,
            modal: true,
            buttons: {
                "Change Chair": function () {
                    $.ajax({
                        url: "/Calendar/ChangeChair",
                        type: "POST",
                        data: { 
                                AppointmentID: document.getElementById("appointmentid").value,
                                id: document.getElementById("newChair").value
                         },
                        dataType: "json",
                        success: function (data) {
                            $("#dialog-message-success-change-chair").dialog("open");
                        },
                        complete: function (jqXHR, textStatus) {
                            
                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                            $("#dialog-message-error").dialog("open");
                        }
                    });
                },
                Cancel: function () {
                    $(this).dialog("close");
                }
            }
        });

        $( "#dialog-remove_attendee" ).dialog({
            autoOpen: false,
            resizable: true,
            height: 200,
            width: 450,
            modal: true,
            buttons: {
                "Remove Attendee": function () {
                    $.ajax({
                        url: "/Calendar/RemoveAttendee",
                        type: "POST",
                        data: { 
                                ID: document.getElementById("hdnAttendID").value,
                                AppointmentID: document.getElementById("appointmentid").value
                         },
                        dataType: "json",
                        success: function (data) {
                            $("#dialog-message-success-remove_attendee").dialog("open");
                        },
                        complete: function (jqXHR, textStatus) {
                            
                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                            $("#dialog-message-error").dialog("open");
                        }
                    });
                },
                Cancel: function () {
                    $(this).dialog("close");
                }
            }
        });

        $(".remove_attendee")
            .click(function () {
                document.getElementById("hdnAttendID").value = $(this).attr("value");
                $("#dialog-remove_attendee").dialog("open");
            });

        $(".change_Chair")
            .click(function () {
                $("#dialog-form-change-chair").dialog("open");
            });

        $(".add_attendees")
            .click(function () {
                $("#dialog-form-add-attendees").dialog("open");
            });

    });
</script>
